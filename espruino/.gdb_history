s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
p v
s
 return jsvIsString(v) || jsvIsStringExt(v)
p jsvIsString(v) || jsvIsStringExt(v)
v
s
p var
s
s
s
s
s
s
s
s
s
s
s
s
s
s
p v
p v->varData
s
s
s
s
s
p var
p *var
ptype var
ptype JsVarData
s
s
s
s
s
s
s
s
s
s
p var
p *var
s
s
p var
s
s
set context-code
set context-sections code
s
s
s
p jsVarBlocks
p jsVarBlocks[0]
x jsVarBlocks[0]
x jsVarBlocks[1]
x jsVarBlocks[2]
p c
s
s
p r
s
s
s
s
s
s
s
s
s
s
s
s
p v
s
s
s
p value
p *value
s
s
s
s
s
s
s
s
p jsVarFirstEmpty
s
p  jsvGetAddressOf(jsVarFirstEmpty)
s
s
info breakpoints
delete 2
delete 3
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
ss
s
s
p i
p sizeof(JsVar)
s 32
s
s
c
c
p v
v->flags
p v->flags
r
c
q
r segv
source exploitable/exploitable/exploitable.py 
exploitable
b* 0x55555556766f 
r
p var
p var
p *var
s
s
p var->flags
p  JSV_LOCK_MASK
s
s
s
v->flags>>JSV_LOCK_SHIFT
p v->flags>>JSV_LOCK_SHIFT
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
delete 1
c
p v
x/30xw $sp
x 0xffffe1d0
q
r segv
exploitable
source exploitable/exploitable/exploitable.py 
exploitable
q
r
q
r segv
p v
p v->flags
q
